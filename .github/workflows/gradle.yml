# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring CI/CD with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      working-directory: socksAI/
#       uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
#       with:
#         arguments: build
      run : ./gradlew clean build
      
    - name: 도커 이미지 빌드 # (2)
      run: docker build -t twinson37/socks-ai .
      
    - name: Docker Hub 로그인 # (3)
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Docker Hub 퍼블리시 # (4)
      run: docker push twinson37/socks-ai

    - name: WAS 인스턴스 접속 및 애플리케이션 실행 # (5)
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.WAS_HOST }}
        username: ${{ secrets.WAS_USERNAME }}
        password: ${{ secrets.WAS_PASSWORD }}
        port: ${{ secrets.WAS_SSH_PORT }}
        command_timeout: 300m
        script: |
          docker stop $(docker ps -a -q) 
          docker rm $(docker ps -a -q) 
          docker pull twinson37/socks-ai
          docker run -d -p 8080:8080 --name spring twinson37/socks-ai
          docker cp /home/socks/docker_file/. spring:/root/eunhy




